#!/usr/bin/python
# -*- coding: utf-8 -*-

ANSIBLE_METADATA = {
    'metadata_version': '1.0',
    'status': ['preview'],
    'supported_by': 'community'
}

DOCUMENTATION = '''
---
module: oracle_tnsnames
short_description: Manipulate Oracle's tnsnames.ora and other .ora files
description:
    - Manipulate Oracle's tnsnames.ora and other .ora files
    - Must be run on a remote host
version_added: "2.7"
options:
    path:
        description:
        - location of .ora file
        required: true
    backup:
        description:
        - Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly.
        type: bool
        default: no

notes:
    - Each stanze is written on single line
    - Comments are not supported (yet)
author: ibre5041@ibrezina.net
'''

EXAMPLES = '''
---
- hosts: localhost
  vars:
    oracle_env:
      ORACLE_HOME: /u01/app/grid/product/12.1.0.2/grid
  tasks:
    - name: Modify tnsnames.ora
      oracle_tnsnames:
        path: "{{ oracle_env.ORACLE_HOME }}/network/admin/tnsnames.ora"
'''

from ansible.module_utils.dotora import *
from ansible.module_utils.basic import *

import sys
import os
import getopt

import unittest

# Ansible code
def main():
    global module
    msg = ['']
    module = AnsibleModule(
        argument_spec = dict(
            path        = dict(required=True),
            backup      = dict(type='bool', default=False), # inherited from add_file_common_args
            state       = dict(default="present", choices=["present", "absent"]),
            alias       = dict(required=False),
            aliases     = dict(required=False, type="list"),
            whole_value = dict(required=False),
            cs_simple   = dict(required=False),
            cs_dg       = dict(required=False),
            attribute_path  = dict(required=False),
            attribute_value = dict(required=False),
        ),
        #add_file_common_args=True,
        supports_check_mode=True,
        mutually_exclusive=[['alias', 'aliases'],['whole_value', 'cs_simple', 'cs_dg', 'attribute_path']]
    )

    #if module._verbosity >= 3:
    #    module.exit_json(changed=True, debug=module.params)
        
    # Preparation
    facts = {}

    filename = module.params["path"]
    orafile = DotOraFile(filename)

    # Output
    module.exit_json(msg=", ".join(msg), changed=False, ansible_facts=facts)


if __name__ == '__main__':
    main()
